name: Deploy to SSH Server

on:
  push:
    branches:
      - main  # Or your main branch name
  workflow_dispatch: # Allows manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest  # Or a runner with the tools you need

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'  # Or your desired Node.js version
          cache: 'npm' # Or yarn or pnpm

      - name: SSH Deploy
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SSH_HOST }}  # Store your server IP in a GitHub Secret
          username: ${{ secrets.SSH_USER }} # Store your server username in a GitHub Secret
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}  # Optional: If using a non-standard SSH port, store it in a secret
          script: |


            # Navigate to the directory
            cd /home/user_test11/test11/strapi

            # Clone the repository (if it's not already there)
            # If it exists, just pull the changes.
            if [ ! -d ".git" ]; then
              git clone --depth 1 -b ${{ github.ref_name }}  https://github.com/${{ github.repository }}.git .
            else
              git pull origin ${{ github.ref_name }}
            fi

            # Install dependencies
            # npm install  # Or yarn install, or pnpm install

            # Build the Next.js application
            # npm run build

            # Restart the application (using pm2 or your chosen method)
            # pm2 restart nvsert-strapi  # Replace with your pm2 app name, or your start command
            # Сначала проверим структуру сервиса declaration-gost-r
            node scripts/check-declaration.js

            # Затем запустим синхронизацию
            npm run sync:service-content
